@page "/products"
@inject HttpClient Http


<h3>Product List</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}
else if(products != null)
{
    <ul>
    @foreach (var product in products)
    {
        <li>@product.Category.Name - @product.Name - $@product.Price</li>
    }
    </ul>
}
else
{
    <p class="tex-primary">Loading...</p>
}

@code {
    private List<Product>? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await Http.GetFromJsonAsync<List<Product>>("/api/products");
        }
        catch (HttpRequestException ex)
        {
            errorMessage = $"Error fetching products: {ex.Message}"; 
            Console.WriteLine(errorMessage);
        }
    }

    public class Category
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }

    public class Product
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }

        public Category Category { get; set; }
    }
}